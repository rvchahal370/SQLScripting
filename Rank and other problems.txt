
-- Ranking the score  in the descending order and all the duplicate should have same rank with no hollow rank

Select score, DENSE_RANK() over (Order By score) AS "rank" from Scores

-- Write an SQL query to find all numbers that appear at least three times consecutively. Return the result table in any order.

Example 1:

Input: 
Logs table:
+----+-----+
| id | num |
+----+-----+
| 1  | 1   |
| 2  | 1   |
| 3  | 1   |
| 4  | 2   |
| 5  | 1   |
| 6  | 2   |
| 7  | 2   |
+----+-----+
Output: 
+-----------------+
| ConsecutiveNums |
+-----------------+
| 1               |
+-----------------+

Explanation: 1 is the only number that appears consecutively for at least three times.

First Solution:
-----------------------

Select A.num AS ConsecutiveNums from (Select num,ROW_NUMBER() over (Order by num) AS Con from Logs) A where A.con = 3

Second Solution:
------------------------------

WITH CTE_Logs AS
(Select num, Count(num) over (Partition By num) as N from logs)
Select DISTINCT(CTE_Logs.num) from CTE_Logs where CTE_Logs.N = 3 

Third Solution:
---------------------------------------

Select DISTINCT(A.num) from PortfolioProject..Logs A JOIN PortfolioProject..Logs B ON A.id = B.id+1 
and A.num = B.num JOIN PortfolioProject..Logs C ON A.id = C.id+2 where A.num = C.num

->Employees Earning More Than Their Managers

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
| salary      | int     |
| managerId   | int     |
+-------------+---------+
id is the primary key column for this table.
Each row of this table indicates the ID of an employee, their name, salary, and the ID of their manager.
 

Write an SQL query to find the employees who earn more than their managers.

Return the result table in any order.

The query result format is in the following example.

Solution:
-------------------------------------

Select B.Name AS "Employee" from Employee A JOIN Employee B ON A.id = B.Managerid and A.Salary < B.Salary

->Duplicate Emlails:

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| email       | varchar |
+-------------+---------+
id is the primary key column for this table.
Each row of this table contains an email. The emails will not contain uppercase letters.
 

Write an SQL query to report all the duplicate emails. Note that it's guaranteed that the email field is not NULL.

Return the result table in any order.

The query result format is in the following example.

First Solution:
--------------------------------------------------------------

Select DISTINCT(A.email) AS EMAIL from (Select email, count(*) OVER (Partition By email) as C FROM Person) A where A.C > 1

Second Solution
-------------------------------------------------------------

Select email from person group by email having Count(email) > 1


